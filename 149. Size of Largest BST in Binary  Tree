#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
class tree{
    public:
    int maxi; int mini; bool isbst; int size;
};
tree helper(TreeNode<int>* root,int &ans){
    if(root==NULL){
        return {INT_MIN,INT_MAX,true,0};
    }
    tree left=helper(root->left,ans);
    tree right=helper(root->right,ans);
    tree currentnode;
    currentnode.size=left.size+right.size+1;
    currentnode.maxi=max(root->data,right.maxi);
    currentnode.mini=min(root->data,left.mini);
    if(left.isbst and right.isbst and (root->data>left.maxi and root->data <right.mini)) currentnode.isbst=true;
    else currentnode.isbst=false;
    if(currentnode.isbst) ans=max(ans,currentnode.size);

    return currentnode;
}
int largestBST(TreeNode<int>* root) 
{
    // Write your code here
    int maxsize=0;
    tree ans=helper(root,maxsize);
    return maxsize;
}






