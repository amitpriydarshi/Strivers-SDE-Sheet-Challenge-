vector<int> KMostFrequent(int n, int k, vector<int> &arr)
{
    // Write your code here.
    unordered_map<int,int> freq;
    vector<int> output;
    for(int i=0; i<n;i++) freq[arr[i]]++;
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> min_heap;
    for(auto &it:freq){
        min_heap.push({it.second,it.first});
        if(min_heap.size()>k){
            min_heap.pop();
        }
    }
    while(k--){
        output.push_back(min_heap.top().second);
        min_heap.pop();
    }
    return output;
}
