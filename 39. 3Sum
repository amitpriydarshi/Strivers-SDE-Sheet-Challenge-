#include <bits/stdc++.h>
// void helper(vector<int> arr,vector<vector> > &output,int n,int k){

vector<vector<int>> findTriplets(vector<int>arr, int n, int K) {
	
	vector<vector<int> > output;
	sort(arr.begin(),arr.end());
	for(int i=0; i<n; i++){
		int targetvalue=K-arr[i];
		int st=i+1;
		int en=n-1;
		while(st<en){
			int csum=arr[st]+arr[en];
			if(csum<targetvalue)st++;
			else if(csum>targetvalue) en--;
			else{
				int x=arr[st];
				int y=arr[en];
				output.push_back({arr[i],arr[st],arr[en]});
				while(st<en and arr[st]==x) st++;
				while(st<en and arr[en]==y) en--;
			}
		}
		while(i+1<n and arr[i]==arr[i+1]) i++;
	}
	return output;
	// Write your code here.
	// vector<vector<int> > output;
    // set<vector<int> > vis;
	// for(int i=0; i<n-2; i++){
	// 	for(int  j=i+1; j<n-1; j++){
	// 		for(int k=j+1; k<n; k++){
	// 			if(arr[i]+arr[j]+arr[k]==K){
	// 				vector<int> temp;
	// 				temp.push_back(arr[i]);
	// 				temp.push_back(arr[j]);
	// 				temp.push_back(arr[k]);
	// 				sort(temp.begin(),temp.end());
	// 				if(vis.find(temp)==vis.end()){
	// 					output.push_back(temp);
	// 					vis.insert(temp);
	// 				}
	// 			}
	// 		}
	// 	}
	// }
	// return output;
}
